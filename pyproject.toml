[tool.poetry]
name = "amadla"
version = "1.0.0"
description = "Amadla CLI utility"
authors = [
    "Jean-Nicolas Boulay Desjardins",
    "Ian Benlolo",
    "Sharon-Alexa Acevedo"
]
license = "MIT"
readme = "README.md"
keywords = [
    "IaC",
    "cloud",
    "sysadmin",
    "template"
]
classifiers=[
    'Development Status :: 1 - Planning',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.12',
    'Topic :: Software Development :: Build Tools',
    'Topic :: Utilities',
]
packages = [{include='amadlacli', from='.'}]

[tool.poetry.scripts]
amadlacli = 'amadlacli.cli:main'

[tool.poetry.dependencies]
python = "^3.12.0"
PyYAML = "^6.0.1"
Jinja2 = "^3.1.4"
click = "^8.1.7"
jschon = "^0.11.1"
python-dotenv = "^1.0.1"
requests = "^2.32.2"
jsonschema = "^4.22.0"
secretstorage = "^3.3.3"
mypy = "^1.10.0"
pygit2 = "^1.15.0"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
ruff = "^0.4.5"
pre-commit = "^3.7.1"
behave = "^1.2.6"
mypy = "^1.10.0"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
  \.toml
  |\.sh
  |\.git
  |\.ini
  |Dockerfile
  |Jenkinfile
)/
'''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project.urls]
source="https://github.com/AmadlaOrg/amadla-cli"
GitHub= "https://github.com/AmadlaOrg"
documentation = "https://amadla.org/projects/amadla-cli/docs/en/latest"
saythanks = "https://saythanks.io/to/amadla.org"
changelog = "https://github.com/AmadlaOrg/amadla-cli/blob/develop/CHANGELOG.rst"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E",
    "F",
    "I", #isort
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "PLC", # Pylint - Convention
    "PLE", # Pylint - Error
    "PLR", # Pylint - Refactor
    "TRY", # tryceratops
    "RUF", # Ruff-specific rules
]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py312"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
